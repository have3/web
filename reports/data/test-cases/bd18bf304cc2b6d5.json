{"uid":"bd18bf304cc2b6d5","name":"test_city[caseinfo0]","fullName":"testcases.test_login.TestRequest#test_city","historyId":"eb25015ee3c3f62f19c56a4aaea4fa72","time":{"start":1734016517589,"stop":1734016517590,"duration":1},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not subscriptable","statusTrace":"self = <testcases.test_login.TestRequest object at 0x7f997c402580>\ncaseinfo = {'extract': {'citycode': '$.data[*].code'}, 'name': '正确token成功获取城市列表', 'parameterize': {'name-token-assert_str': '/dat...est': {'data': 'None', 'headers': {'Content-Type': 'application/json', 'X-Token': '${read_extract_data(token)}'}}, ...}\n\n    @pytest.mark.parametrize(\"caseinfo\", read_testcase('city_type.yaml'))\n    def test_city(self, caseinfo):\n>      RequestUtil(\"base_test_url\",Test()).standard_yaml(caseinfo)\n\ntestcases/test_login.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/request_util.py:69: in standard_yaml\n    res = self.send_request(method,url,**caseinfo['request']) #caseinfo需要解包加**\ncommon/request_util.py:112: in send_request\n    kwargs[key]=self.replace_value(value)\ncommon/request_util.py:43: in replace_value\n    new_value=getattr(self.obj,func_name)(*args_value2)\ntest.py:17: in read_extract_data\n    return YamlUtil().read_yaml(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.yaml_util.YamlUtil object at 0x7f997c0a1730>, key = 'token'\n\n    def read_yaml(self,key):\n        with open(os.getcwd() + '/extract.yaml', encoding='utf-8', mode='r') as f:\n            value = yaml.load(f, yaml.FullLoader)\n>           return value[key]\nE           TypeError: 'NoneType' object is not subscriptable\n\ncommon/yaml_util.py:10: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1734016516857,"stop":1734016516907,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"clear_extract","time":{"start":1734016516907,"stop":1734016516907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestRequest"},{"name":"host","value":"luodandeMBP.lan"},{"name":"thread","value":"40809-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'name': '正确token成功获取城市列表', 'parameterize': {'name-token-assert_str': '/datas/city_type_data.yaml'}, 'request': {'method': 'get', 'url': '/jlcloud/api/map/city?dicCode=city_type', 'data': 'None', 'headers': {'Content-Type': 'application/json', 'X-Token': '${read_extract_data(token)}'}}, 'extract': {'citycode': '$.data[*].code'}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'data'}]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bd18bf304cc2b6d5.json","parameterValues":["{'name': '正确token成功获取城市列表', 'parameterize': {'name-token-assert_str': '/datas/city_type_data.yaml'}, 'request': {'method': 'get', 'url': '/jlcloud/api/map/city?dicCode=city_type', 'data': 'None', 'headers': {'Content-Type': 'application/json', 'X-Token': '${read_extract_data(token)}'}}, 'extract': {'citycode': '$.data[*].code'}, 'validate': [{'equals': {'status_code': 200}}, {'contains': 'data'}]}"]}